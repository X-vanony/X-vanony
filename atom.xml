<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>X Learning_Record</title>
  
  <subtitle>春风已过，昨日不复</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-01T09:32:05.976Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Vanony X</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>css选择器语法规则</title>
    <link href="http://yoursite.com/2020/03/01/css%E9%80%89%E6%8B%A9%E5%99%A8%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/"/>
    <id>http://yoursite.com/2020/03/01/css%E9%80%89%E6%8B%A9%E5%99%A8%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/</id>
    <published>2020-03-01T08:57:23.000Z</published>
    <updated>2020-03-01T09:32:05.976Z</updated>
    
    <content type="html"><![CDATA[<h4 id="css选择器定位节点"><a href="#css选择器定位节点" class="headerlink" title="css选择器定位节点"></a>css选择器定位节点</h4><a id="more"></a><table><thead><tr><th>选择器</th><th>例子</th><th>例子描述</th></tr></thead><tbody><tr><td>.class</td><td>.intro</td><td>选中class = “intro”的所有节点</td></tr><tr><td>#id</td><td>#firstname</td><td>选择id = “firstname”的所有节点</td></tr><tr><td>*</td><td>*</td><td>选择所有节点</td></tr><tr><td>element</td><td>p</td><td>选择所有p节点</td></tr><tr><td>element，element</td><td>div，p</td><td>选择所有div节点和所有p节点</td></tr><tr><td>element element</td><td>div p</td><td>选择div节点内部所有的p节点</td></tr><tr><td>element&gt;element</td><td>div&gt;p</td><td>选择父节点为div的所有p节点</td></tr><tr><td>element+element</td><td>div+p</td><td>选择紧接在div节点之后的所有p节点</td></tr><tr><td>[attribute]</td><td>[target]</td><td>选择带有target属性的所有节点</td></tr><tr><td>[attribute=value]</td><td>[target=blank]</td><td>选择target=“blank”的所有节点</td></tr><tr><td>[attribute~=value]</td><td>[title~=flower]</td><td>选择title属性包含单词flower的所有节点</td></tr><tr><td>：link</td><td>a:link</td><td>选择所有未被访问的链接</td></tr><tr><td>：visited</td><td>a:visited</td><td>选择所有已被访问的链接</td></tr><tr><td>：active</td><td>a:active</td><td>选择活动链接</td></tr><tr><td>：hover</td><td>a:hover</td><td>选择鼠标指针位于其上的链接</td></tr><tr><td>：focus</td><td>input：focus</td><td>选择获得焦点的input节点</td></tr><tr><td>：first-letter</td><td>p:first-letter</td><td>选择每个p节点的首字母</td></tr><tr><td>：first-line</td><td>p:first-line</td><td>选择每个p节点的首行</td></tr><tr><td>：first-child</td><td>p:first-child</td><td>选择属于父节点的第一个子节点的所有p节点</td></tr><tr><td>：before</td><td>p:before</td><td>在每个p节点的内容之前插入内容</td></tr><tr><td>：after</td><td>p:after</td><td>在每个p节点的内容之后插入内容</td></tr><tr><td>：lang（language）</td><td>p:lang</td><td>选择带有以it开头的lang属性值的所有p节点</td></tr><tr><td>element1~element2</td><td>p~ul</td><td>选择前面有p节点的所有ul节点</td></tr><tr><td>[attribute^=value]</td><td>a[src^=”https”]</td><td>选择其src属性值以https开头的所有a节点</td></tr><tr><td>[attribute$=value]</td><td>a[src$=”.pdf”]</td><td>选择其src属性以.pdf结尾的所有a节点</td></tr><tr><td>[attribute*=value]</td><td>a[src*=”abc”]</td><td>选择其src属性中包含abc子串的所有a节点</td></tr><tr><td>：first-of-type</td><td>p:first-of-type</td><td>选择属于其父节点的首个p节点的所有p节点</td></tr><tr><td>：last-of-type</td><td>p:last-of-type</td><td>选择属于其父节点的最后p节点的所有p节点</td></tr><tr><td>：only-of-type</td><td>p:only-of-type</td><td>选择属于其父节点唯一的p节点的所有p节点</td></tr><tr><td>：only-child</td><td>p:only-child</td><td>选择属于其父节点的唯一子节点的所有p节点</td></tr><tr><td>：nth-child（n)</td><td>p:nth-child</td><td>选择属于其父节点的第二个子节点的所有p节点</td></tr><tr><td>：nth-last-child（n）</td><td>p:nth-last-child</td><td>选择属于其父节点的最后一个子节点开始计数</td></tr><tr><td>：nth-of-type（n）</td><td>p:nth-of-type</td><td>选择属于其父节点第二个p节点的所有p节点</td></tr><tr><td>：nth-last-of-type（n）</td><td>p:nth-last-of-type</td><td>选择属于其父节点的最后一个子节点开始计数</td></tr><tr><td>：last-child</td><td>p:last-child</td><td>选择属于其父节点最后一个子节点的所有p节点</td></tr><tr><td>：root</td><td>：root</td><td>选择文档的根节点</td></tr><tr><td>：empty</td><td>p:empty</td><td>选择没有子节点的所有p节点（包括文本节点）</td></tr><tr><td>：target</td><td>#news：target</td><td>选择当前活动的#news节点</td></tr><tr><td>：enabled</td><td>input：enabled</td><td>选择每个启用的input节点</td></tr><tr><td>：disabled</td><td>input：disabled</td><td>选择每个禁用的input节点</td></tr><tr><td>：checked</td><td>input：checked</td><td>选择每个被选中的input节点</td></tr><tr><td>：not（selector）</td><td>：not</td><td>选择非p节点的所有节点</td></tr><tr><td>：：selection</td><td>：：selection</td><td>选择被用户选取的节点部分</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;css选择器定位节点&quot;&gt;&lt;a href=&quot;#css选择器定位节点&quot; class=&quot;headerlink&quot; title=&quot;css选择器定位节点&quot;&gt;&lt;/a&gt;css选择器定位节点&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="语法规则" scheme="http://yoursite.com/tags/%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>HTTP基础</title>
    <link href="http://yoursite.com/2020/03/01/HTTP%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/03/01/HTTP%E5%9F%BA%E7%A1%80/</id>
    <published>2020-03-01T04:14:40.000Z</published>
    <updated>2020-03-01T05:54:40.494Z</updated>
    
    <content type="html"><![CDATA[<h3 id="http基础记录"><a href="#http基础记录" class="headerlink" title="http基础记录"></a>http基础记录</h3><ol><li><strong>请求方法</strong></li><li><strong>常用头信息</strong></li><li><strong>响应状态码</strong></li><li><strong>响应体</strong></li></ol><a id="more"></a><hr><ul><li><h5 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a><em>请求方法</em></h5></li></ul><table><thead><tr><th align="center"><strong>方法</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td align="center">GET</td><td>请求页面，并返回页面内容（<strong>常用</strong>）</td></tr><tr><td align="center">HEAD</td><td>类似于GET请求，只不过返回的响应中没有具体的内容，用于获取报头</td></tr><tr><td align="center">POST</td><td>大多用于提交表单或上传文件，数据包含在请求体中（<strong>常用</strong>）</td></tr><tr><td align="center">PUT</td><td>从客户端向服务器传送的数据取代指定文档中个的内容</td></tr><tr><td align="center">DELETE</td><td>请求服务器删除指定的页面</td></tr><tr><td align="center">CONNECT</td><td>把服务器当做跳板，让服务器代替客户端访问其他网页</td></tr><tr><td align="center">OPTIONS</td><td>允许客户端查看服务器的性能</td></tr><tr><td align="center">TRACE</td><td>回显服务器收到的请求，主要用于测试或诊断</td></tr></tbody></table><ul><li><strong><em>常见头信息</em></strong></li></ul><table><thead><tr><th align="center">头信息</th><th>描述</th></tr></thead><tbody><tr><td align="center">Accept</td><td>请求报头域</td></tr><tr><td align="center">Accept-Language</td><td>指定客户端可接受的语言类型</td></tr><tr><td align="center">Accept-Encoding</td><td>指定客户端可接受的内容编码</td></tr><tr><td align="center">Host</td><td>用于指定请求的资源的主机IP和端口号</td></tr><tr><td align="center">Cookie/Cookies</td><td>主要是维持当前访问会话。</td></tr><tr><td align="center">Referer</td><td>标识请求来源</td></tr><tr><td align="center">User-Agent</td><td>简称UA，用于标识客户使用的操作系统及版本，浏览器及版本等信息</td></tr><tr><td align="center">Content-Type</td><td>用来表示具体请求中的媒体类型信息（text/html：返回HTML文档；application/x-javascript：返回Javascript文件；image/jpeg：返回图片）</td></tr></tbody></table><table><thead><tr><th align="center">Content-Type</th><th>提交数据的方式</th></tr></thead><tbody><tr><td align="center">application/x-www-form-urlencoded</td><td>表单数据</td></tr><tr><td align="center">multipart/form-data</td><td>表单文件上传</td></tr><tr><td align="center">application/json</td><td>序列化JSON数据</td></tr><tr><td align="center">text/xml</td><td>XML数据状态码</td></tr></tbody></table><ul><li><strong><em>响应状态码</em></strong></li></ul><table><thead><tr><th>状态码</th><th>说明</th><th>详情</th></tr></thead><tbody><tr><td>100</td><td>继续</td><td>请求者应当继续提出请求。服务器已收到请求的一部分，正在等待其余部分</td></tr><tr><td>101</td><td>切换协议</td><td>请求者已要求服务器切换协议，服务器已确认并准备切换</td></tr><tr><td>200</td><td>成功</td><td>服务器已成功处理了请求</td></tr><tr><td>201</td><td>已创建</td><td>请求成功并且服务器创建了新的资源</td></tr><tr><td>202</td><td>已接受</td><td>服务器已接受请求，但尚未处理</td></tr><tr><td>203</td><td>非授权信息</td><td>服务器已成功处理了请求，但返回的信息可能来自另一个源</td></tr><tr><td>204</td><td>无内容</td><td>服务器成功处理了请求，但是没有返回任何内容</td></tr><tr><td>205</td><td>重置内容</td><td>服务器成功处理了请求，内容被重置</td></tr><tr><td>206</td><td>部分内容</td><td>服务器成功处理了部分请求</td></tr><tr><td>300</td><td>多种选择</td><td>针对请求，服务器可执行多种操作</td></tr><tr><td>301</td><td>永久移动</td><td>请求的网页已永久移动到新位置，寄永久重定向</td></tr><tr><td>302</td><td>临时移动</td><td>请求的网页暂时跳转到其他页面，即暂时重定向</td></tr><tr><td>303</td><td>查看其他位置</td><td>如果原来的请求是POST，重定向目标文档应该通过GET提取</td></tr><tr><td>304</td><td>未修改</td><td>此次请求返回的网页未修改，继续使用上次的资源</td></tr><tr><td>305</td><td>使用代理</td><td>请求者应该使用代理访问该网页</td></tr><tr><td>307</td><td>临时重定向</td><td>请求的资源临时从其他位置响应</td></tr><tr><td>400</td><td>错误请求</td><td>服务器无法解析该请求</td></tr><tr><td>401</td><td>未授权</td><td>请求没有进行身份验证或验证未通过</td></tr><tr><td>403</td><td>禁止访问</td><td>服务器拒绝此请求</td></tr><tr><td>404</td><td>未找到</td><td>服务器找不到请求的网页</td></tr><tr><td>405</td><td>方法禁用</td><td>服务器禁用了请求中指定的方法</td></tr><tr><td>406</td><td>不接受</td><td>无法使用请求的内容响应请求的网页</td></tr><tr><td>407</td><td>需要代理授权</td><td>请求者需要使用代理授权</td></tr><tr><td>408</td><td>请求超时</td><td>服务器请求超时</td></tr><tr><td>409</td><td>冲突</td><td>服务器在完成请求是发生冲突</td></tr><tr><td>410</td><td>已删除</td><td>请求的资源已永久删除</td></tr><tr><td>411</td><td>需要有效长度</td><td>服务器不接受不含有效内容长度标头字段的请求</td></tr><tr><td>412</td><td>未满足前提条件</td><td>服务器未满足请求者在请求中设置的其中一个前提条件</td></tr><tr><td>413</td><td>请求实体过大</td><td>请求实体过大，超出服务器的处理能力</td></tr><tr><td>414</td><td>请求URI过长</td><td>请求网址过长，服务器无法处理</td></tr><tr><td>415</td><td>不支持类型</td><td>请求格式不被请求页面支持</td></tr><tr><td>416</td><td>请求范围不符</td><td>页面无法提供请求的范围</td></tr><tr><td>417</td><td>未满足期望值</td><td>服务器未满足期望请求标头字段的要求</td></tr><tr><td>500</td><td>服务器内部错误</td><td>服务器遇到错误无法完成请求</td></tr><tr><td>501</td><td>未实现</td><td>服务器不具备完成请求的功能</td></tr><tr><td>502</td><td>错误网关</td><td>服务器作为网关或代理，从上游服务器收到无效响应</td></tr><tr><td>503</td><td>服务不可用</td><td>服务器目前无法使用</td></tr><tr><td>504</td><td>网关超时</td><td>服务器作为网关或代理，但是没有及时从上游服务器收到请求</td></tr><tr><td>505</td><td>HTTP版本不支持</td><td>服务器不支持请求中所用的HTTP协议版本</td></tr></tbody></table><ul><li><strong><em>响应体</em></strong></li></ul><p>响应体内容就是我们需要解析的目标，处于浏览器开发者工具中的Preview中。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;http基础记录&quot;&gt;&lt;a href=&quot;#http基础记录&quot; class=&quot;headerlink&quot; title=&quot;http基础记录&quot;&gt;&lt;/a&gt;http基础记录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;请求方法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常用头信息&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;响应状态码&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;响应体&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="HTTP请求" scheme="http://yoursite.com/tags/HTTP%E8%AF%B7%E6%B1%82/"/>
    
      <category term="响应状态码" scheme="http://yoursite.com/tags/%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>conda之tesserocr安装</title>
    <link href="http://yoursite.com/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/</id>
    <published>2020-03-01T01:19:16.000Z</published>
    <updated>2020-03-01T10:20:04.937Z</updated>
    
    <content type="html"><![CDATA[<ul><li><strong>初衷</strong></li></ul><blockquote><p>本人电脑装的是win10的系统环境，使用的也是python3.8。然后在自学爬虫，接着各种不易，这次要说的是tesserocr这个坑人的东西。由于我是在看教程学的，啥也不是很清楚，然后到二维码识别这一章的时候需要这个东西。啥也不多说装就是，命令行输入：pip3 install tesserocr。然后就出现了下面一片红。</p></blockquote><a id="more"></a><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes1.png" alt="tes1"></p><blockquote><p>初时不为意，以为是需要翻墙，试了一下不行。（是有前见非空穴来风，之前pip安装其它库的时候，也类似，翻下墙装就好了）然后以为是电脑开机时间太长，重启呗。看来直接输命令不行，只能下包了，啥也不管下载最新的tesserocr2.5.0压缩包，之前装了最新的tessercat5.0的。然后开始解压安装tesserocr，开始操作：</p></blockquote><blockquote><p>解压后，打开压缩包，出现如下文件：</p></blockquote><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes2.png" alt="tes2"></p><blockquote><p>惯性setup.py是安装包，python运行一下</p></blockquote><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes3.png" alt="tes3"></p><blockquote><p>然后事情没那么简单，看到了报错信息，那就跟着提示来，setup –help</p></blockquote><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes4.png" alt="tes4"></p><blockquote><p>根据显示，可以看到”setup.py install”这一行是安装的意思</p></blockquote><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes5.png" alt="tes5"></p><blockquote><p>那就安装试下，新的提示又来了“Supporting tesseract v4.1.1”。卸载最新的tesseract包，下载<a href="https://digi.bib.uni-mannheim.de/tesseract/" target="_blank" rel="noopener">tesseract4.1</a>的软件包安装，至于安装应该不用多说。然后结果很不幸还是没有成功，我放弃了。不过网上很多低于python3.8版本的找到对应的版本成功的，我装的python3.8的所以不去尝试了。后来无意间看到tesserocr解压包有一个说明文件，打开看见了下面这一段，接着就开始新的操作：</p></blockquote><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes6.png" alt="tes6"></p><blockquote><p>“conda install -c conda-forge tesserocr”这一句。天无绝人之路，正好我装了conda，使用这个安装也是一样，那就安装呗。</p><p>开始新的操作之旅，结果撞的头破血流，坑。运行后就显示：“Solving environment：failed with initial frozen solve”，那个心中。。。然后为了继续学习，我尝试了一下各种方法，然后走头无路只能求助度娘了。后来各种尝试，最后综合得来结果。</p></blockquote><ol><li>先在win10的命令窗口将conda更新一下，使用命令“conda update -n base conda“，然后就耐心等吧，最后第一次更新失败告终</li><li>别着急，别放弃，接着更新第二遍更新，等着进入再一次漫长的等待</li><li>运行完成接着执行：conda update –all，最后显示以done结尾表示ok</li></ol><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes7.png" alt="tes7"></p><ol><li>然后开始真正的安装：conda install -c conda-forge tesserocr，这下就等安装完成即可开始使用。</li></ol><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes8.png" alt="tes8"></p><ol><li>最后可以再检测安装一下，看是否所有的包都安装完成</li></ol><p><img src="/2020/03/01/conda%E4%B9%8Btesserocr%E5%AE%89%E8%A3%85/tes9.png" alt="tes9"></p><h4 id="到这里tesserocr就算安装完成了，可以开始继续的学习了。虽然几经波折，不过解决总算是好的，也算小有收获"><a href="#到这里tesserocr就算安装完成了，可以开始继续的学习了。虽然几经波折，不过解决总算是好的，也算小有收获" class="headerlink" title="到这里tesserocr就算安装完成了，可以开始继续的学习了。虽然几经波折，不过解决总算是好的，也算小有收获"></a>到这里tesserocr就算安装完成了，可以开始继续的学习了。虽然几经波折，不过解决总算是好的，也算小有收获</h4>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;初衷&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;本人电脑装的是win10的系统环境，使用的也是python3.8。然后在自学爬虫，接着各种不易，这次要说的是tesserocr这个坑人的东西。由于我是在看教程学的，啥也不是很清楚，然后到二维码识别这一章的时候需要这个东西。啥也不多说装就是，命令行输入：pip3 install tesserocr。然后就出现了下面一片红。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="tesserocr" scheme="http://yoursite.com/tags/tesserocr/"/>
    
      <category term="conda" scheme="http://yoursite.com/tags/conda/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫问题（一）</title>
    <link href="http://yoursite.com/2020/02/28/python%E7%88%AC%E8%99%AB%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/02/28/python%E7%88%AC%E8%99%AB%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-02-28T13:16:53.000Z</published>
    <updated>2020-02-29T08:38:34.576Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/X-vanony" target="_blank" rel="noopener"><img width="149" height="149" style="position: absolute; top: 0;right: 0; border: 0;" src="https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=149%2C149" class="attachment-full size-full" alt="Fork me on GitHub" data-recalc-dims="1"></a></p><ul><li><h4 id="快看漫画爬取报错"><a href="#快看漫画爬取报错" class="headerlink" title="快看漫画爬取报错"></a>快看漫画爬取报错</h4></li></ul><p>由于最近偶然接触到了爬虫，碰巧也一直在追快看漫画的《超能立方》。想着就练练手，试着爬取去爬取一下这本漫画，爬取之前就已经看过阿里云大学的爬虫课。有个初步了解，再看了小半本《python网络爬虫从入门到实践2》。暗想：这挺简单的啊，好像没有那么难啊。于是就撸起袖子，开始在电脑前日夜更替不停的敲了，中间的心酸泪只有自己懂。（自己给自己一耳光，这也叫简单。）敲了几天，遇到问题百度，谷歌，一个bug就要捣鼓几个小时。小白自学好可怜，反复尝试，更改。总算有个样子，可以勉强单线程的爬取该网站的所有漫画。（<a href="https://github.com/X-vanony/python-scrawl-kkmh" target="_blank" rel="noopener">代码</a>将上传至github，只供学习，勿做它用，违者后果自负）这里讲解一下部分中途遇到的问题及解决方案。  </p><a id="more"></a><hr><h6 id="类型报错"><a href="#类型报错" class="headerlink" title="类型报错"></a>类型报错</h6><p>（注：报错时查找出报错所在位置。坑：一直以为是正则语法错误，不管怎么改都报错，误入歧途。真正报错位置在于后面的“img_url”文本的类型错误，根据提示更改成正确的格式即可。） </p><p><img src="/2020/02/28/python%E7%88%AC%E8%99%AB%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/err1.png" alt="err1"></p><h6 id="解："><a href="#解：" class="headerlink" title="解："></a>解：</h6><p>​        将“img_url”格式转换成字符串格式即可</p><p><img src="/2020/02/28/python%E7%88%AC%E8%99%AB%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/err2.png" alt="err2"></p><hr><h6 id="参数丢失报错"><a href="#参数丢失报错" class="headerlink" title="参数丢失报错"></a>参数丢失报错</h6><p><img src="/2020/02/28/python%E7%88%AC%E8%99%AB%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/err3.png" alt="err3"></p><hr><h6 id="mysql本地连接报错"><a href="#mysql本地连接报错" class="headerlink" title="mysql本地连接报错"></a>mysql本地连接报错</h6><p>（注：主要错误在于，语法写错：‘password’，其实是密码输入位置，这里多出导致一直无法连接）</p><p><img src="/2020/02/28/python%E7%88%AC%E8%99%AB%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/err4.png" alt="err4"></p><p><img src="/2020/02/28/python%E7%88%AC%E8%99%AB%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/err5.png" alt="err5"></p><h6 id="解：-1"><a href="#解：-1" class="headerlink" title="解："></a>解：</h6><p>​        使用root用户进入mysql，更改权限设置</p><p>ALTER USER ‘root’@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘你的密码’;</p><p><img src="/2020/02/28/python%E7%88%AC%E8%99%AB%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/err6.png" alt="err6"></p><hr><h6 id="以上只是部分报错记录，还有一部分当时太投入了压根忘了记。不过如果有跟我一样的python爬虫小白上路，遇到其它报错可以留言，说不定我遇到过，碰巧解决了呢！此博客将会不定期的发布爬虫相关文档，以及github上会分享出代码，欢迎评论留言一起学习探讨python爬虫。"><a href="#以上只是部分报错记录，还有一部分当时太投入了压根忘了记。不过如果有跟我一样的python爬虫小白上路，遇到其它报错可以留言，说不定我遇到过，碰巧解决了呢！此博客将会不定期的发布爬虫相关文档，以及github上会分享出代码，欢迎评论留言一起学习探讨python爬虫。" class="headerlink" title="以上只是部分报错记录，还有一部分当时太投入了压根忘了记。不过如果有跟我一样的python爬虫小白上路，遇到其它报错可以留言，说不定我遇到过，碰巧解决了呢！此博客将会不定期的发布爬虫相关文档，以及github上会分享出代码，欢迎评论留言一起学习探讨python爬虫。"></a>以上只是部分报错记录，还有一部分当时太投入了压根忘了记。不过如果有跟我一样的python爬虫小白上路，遇到其它报错可以留言，说不定我遇到过，碰巧解决了呢！此博客将会不定期的发布爬虫相关文档，以及github上会分享出<a href="https://github.com/X-vanony/python-scrawl-kkmh" target="_blank" rel="noopener">代码</a>，欢迎评论留言一起学习探讨python爬虫。</h6>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/X-vanony&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img width=&quot;149&quot; height=&quot;149&quot; style=&quot;position: absolute; top: 0;right: 0; border: 0;&quot; src=&quot;https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=149%2C149&quot; class=&quot;attachment-full size-full&quot; alt=&quot;Fork me on GitHub&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;快看漫画爬取报错&quot;&gt;&lt;a href=&quot;#快看漫画爬取报错&quot; class=&quot;headerlink&quot; title=&quot;快看漫画爬取报错&quot;&gt;&lt;/a&gt;快看漫画爬取报错&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于最近偶然接触到了爬虫，碰巧也一直在追快看漫画的《超能立方》。想着就练练手，试着爬取去爬取一下这本漫画，爬取之前就已经看过阿里云大学的爬虫课。有个初步了解，再看了小半本《python网络爬虫从入门到实践2》。暗想：这挺简单的啊，好像没有那么难啊。于是就撸起袖子，开始在电脑前日夜更替不停的敲了，中间的心酸泪只有自己懂。（自己给自己一耳光，这也叫简单。）敲了几天，遇到问题百度，谷歌，一个bug就要捣鼓几个小时。小白自学好可怜，反复尝试，更改。总算有个样子，可以勉强单线程的爬取该网站的所有漫画。（&lt;a href=&quot;https://github.com/X-vanony/python-scrawl-kkmh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;代码&lt;/a&gt;将上传至github，只供学习，勿做它用，违者后果自负）这里讲解一下部分中途遇到的问题及解决方案。  &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="报错" scheme="http://yoursite.com/tags/%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
</feed>
